"""This script contains a few wrapper function to retrieve cut 
results from the pickle file generated by Loic and Rolando"""

import cPickle
import numpy as np
from get_tod import *

class CutResults:
    def __init__(self, path):
        self._data = None
        self._path = path
        self.load()

    def load(self):
        with open(self._path, "r") as f:
            self._data = cPickle.load(f)
        
    def get_data(self, n, random=False):
        n_data = self._data['name']
        if random:
            sel = np.random.randint(n_data, n)
        else:
            sel = np.arange(n)
        filenames = [ self._data['name'][i] for i in sel]
        labels = self._data['sel'][:,sel]
        return filenames, labels

    def get_data_transform(self, n, downsample = 0):
        fnames, labels = self.get_data(n)
        # Retrieve and transform data
        data = get_tod_data_list(fnames, downsample)
        data_min_size = min([d.shape[1] for d in data])
        data_truncated = [d[:,:data_min_size] for d in data]
        data_stack = np.vstack(data_truncated)
        # Transform labels
        labels_stack = np.hstack([ labels[:,i] for i in np.arange(n)])
        return data_stack, labels_stack

    def get_data_learning(self, n, downsample = 0):
        train_ratio = 0.8
        data_stack, labels_stack = self.get_data_transform(n, downsample)
        split_index = int(len(labels_stack)*train_ratio)
        X_train = data_stack[:split_index, :]
        Y_train = labels_stack[:split_index]
        X_test = data_stack[split_index:,:]
        Y_test = labels_stack[split_index:]
        return X_train, Y_train, X_test, Y_test
        


        
            
        
